:echo '========'
:echo "mod version everforest"
:echo '========'

scriptencoding utf-8
set encoding=utf-8

set nocompatible
set mouse=a
set laststatus=2
set number
syntax enable
set tabstop=4
set shiftwidth=4
set expandtab

"cursor line and column added 7 Mar 2019
set cursorline

"original
:let mapleader = "\\"

" original
syntax on

"===============================
" Mods for Everforest
"===============================
 " Important!!
" standard
"if has('termguicolors')
"  set termguicolors
"endif

" To work with Tmux
" Enable true color 启用终端24位色
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif


" For dark version.
set background=dark
" For light version.
" set background=light
" Set contrast.
" This configuration option should be placed before `colorscheme everforest`.
" Available values: 'hard', 'medium'(default), 'soft'
let g:everforest_background = 'hard'
let g:everforest_ui_contrast = 'high'

let g:lightline = {}
let g:lightline.colorscheme = 'everforest'

"=============================
" colorscheme info
" colorscheme gruvbox
" colorscheme solarized
" colorscheme moonshine
colorscheme everforest


"=============================
" control features
":set list
:set listchars=eol:¬,space:·
nmap <leader>l :set list!<CR>

" on leader use cursor column 7 Mar
" set cursorcolumn
nmap <leader>c :set cursorcolumn!<CR>

"conditional exceed right margin
nmap <leader>e :match ErrorMsg /\%>73v.\+/


"=============================
"original
:inoremap jf <esc>
:inoremap fj <esc>

"original
:nnoremap <C-J> <C-W><C-J>
:nnoremap <C-K> <C-W><C-K>
:nnoremap <C-L> <C-W><C-L>
:nnoremap <C-H> <C-W><C-H>

"original
:map - dd
:map <space> viw
:map + ddp



"==========================================================
"7 Feb older statusline mods

"Display Git branch
function! GitBranch()
  return system("git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n'")
endfunction

function! StatuslineGit()
  let l:branchname = GitBranch()
  return strlen(l:branchname) > 0?'  '.l:branchname.' ':''
endfunction

call plug#begin()

Plug 'itchyny/lightline.vim'

call plug#end()
